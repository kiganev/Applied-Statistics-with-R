install.packages(c("backports", "ellipsis", "glue", "haven", "rlang", "tibble", "vctrs"))
Sys.which("make")
Sys.which("make")
install.packages(c("backports", "haven", "rlang"))
Sys.which("make")
1 - pf(4.165161912, 4, 800)
x = seq(-5, 5, by = 0.01)
plot(pnorm(x))
plot(pnorm(x), type = "l")
plot(x,pnorm(x), type = "l")
x = seq(-5, 1.3, by = 0.01)
plot(x,pnorm(x), type = "l")
pnorm(1.3)
x = seq(-5, 5, by = 0.01)
plot(x,dnorm(x), type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(y[x<=1.3], 0, 0), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(y[x<=1.3], 0, 0), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(0, y[x<=1.3], 0), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(0, 0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(0, y[x<=1.3], 1.3), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(x[x<=1.3], max(x), 1.3), c(0, 1.3,y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, 1.3,y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, 0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(1.3, 0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, 0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), 1.3, x[x<=1.3]), c(0, 0, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), 1.3, x[x<=1.3]), c(0, 1.3, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), 1.3, x[x<=1.3]), c(0, y, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), 1.3, x[x<=1.3]), c(0, 1, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, 1, y[x<=1.3]), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, y[x<=1.3], 1), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, y[x<=1.3], 0), col="red")
plot(x, y, type = "l")
polygon(c(1.48, x[x>=1.48], max(x)), c(0, y[x>=1.48], 0), col="red")
plot(x, y, type = "l")
x[x>=-0.5 & x <=0.5]
plot(x, y, type = "l")
polygon(c(0.5, x[x>=-0.5 & x <=0.5], 0.5), c(0, y[x>=-0.5 & x <=0.5], 0), col="red")
plot(x, y, type = "l")
polygon(c(-0.5, x[x>=-0.5 & x <=0.5], 0.5), c(0, y[x>=-0.5 & x <=0.5], 0), col="red")
plot(x, y, type = "l")
polygon(c(-1.959964, x[x<= -1.959964 | x >=  1.959964],  1.959964),
c(0, y[x<=- 1.959964 | x >= 1.959964], 0), col="red")
plot(x, y, type = "l")
polygon(c(min(x), x[x<= -1.959964],-1.959964),
c(0, y[x<=-1.959964], 0), col="red")
plot(x, y, type = "l")
polygon(c(min(x), x[x<= -1.959964],-1.959964),
c(0, y[x<=-1.959964], 0), col="red")
polygon(c(1.959964, x[x<= -1.959964], max(x)),
c(0, y[x>=1.959964], 0), col="red")
plot(x, y, type = "l")
polygon(c(min(x), x[x<= -1.959964],-1.959964),
c(0, y[x<=-1.959964], 0), col="red")
polygon(c(1.959964, x[x>=1.959964], max(x)),
c(0, y[x>=1.959964], 0), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
pnorm(1.3)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, y[x<=1.3], 0), col="red")
plot(x, y, type = "l")
polygon(c(1.48, x[x>=1.48], max(x)), c(0, y[x>=1.48], 0), col="red")
plot(x, y, type = "l")
polygon(c(-0.5, x[x>=-0.5 & x <=0.5], 0.5), c(0, y[x>=-0.5 & x <=0.5], 0), col="red")
pnorm(0.5) - pnorm(-0.5)
plot(x, y, type = "l")
polygon(c(-0.5, x[x>=-0.5 & x <=0.5], 0.5), c(0, y[x>=-0.5 & x <=0.5], 0), col="red")
x <- seq(-5, 5, by = 0.01)
y <- dnorm(x)
pnorm(1.3)
plot(x, y, type = "l")
polygon(c(min(x), x[x<=1.3], 1.3), c(0, y[x<=1.3], 0), col="red")
1 - pnorm(1.48)
plot(x, y, type = "l")
polygon(c(1.48, x[x>=1.48], max(x)), c(0, y[x>=1.48], 0), col="red")
pnorm(0.5) - pnorm(-0.5)
plot(x, y, type = "l")
polygon(c(-0.5, x[x>=-0.5 & x <=0.5], 0.5), c(0, y[x>=-0.5 & x <=0.5], 0), col="red")
pnorm(-1.959964) + 1 - pnorm(1.959964) # or, 2*pnorm(1.959964)
plot(x, y, type = "l")
polygon(c(min(x), x[x<= -1.959964],-1.959964),
c(0, y[x<=-1.959964], 0), col="red")
polygon(c(1.959964, x[x>=1.959964], max(x)),
c(0, y[x>=1.959964], 0), col="red")
A <- matrix(1:9, nrow = 3)
P <- eigen(A)$vectors
LAMBDA <- diag(eigen(A)$values)
P %*% LAMBDA %*% solve(P)
sdv(A)
svd(A)
P
LAMBDA
P %*% t(P)
eigen(P %*% t(P))
eigen(P %*% t(P))$vectors
Z2 <- eigen(A)$values
Z1 <- eigen(P %*% t(P))$vectors
Z1 %*% Z2 %*% Z3
Z3 <- t(Z1)
Z1 %*% Z2 %*% Z3
crossprod(Z1, Z2, Z3)
Z4 <- crossprod(Z1, Z2)
crossprod(Z4, Z3)
svd(A)
Z2 <- diag(eigen(A)$values)
Z1 <- eigen(P %*% t(P))$vectors
Z2 <- diag(eigen(A)$values)
Z3 <- t(Z1)
Z4 <- crossprod(Z1, Z2)
crossprod(Z4, Z3)
LAMBDA
Z1 <- eigen(P %*% t(P))$vectors
Z2 <- diag(eigen(A)$values)
Z3 <- t(Z1)
Z4 <- crossprod(Z1, Z2)
crossprod(Z4, Z3)
svd(A)
P
LAMBDA
eigen(A)$values
mm <- matrix(c(2,1,1,2), nrow = 2)
mm
eigen(mm)$values
svd(mm)
x <- rnorm(20)
y <- rep("Char", 20)
z <- as.factor(rep(c("Heads", "Tails"), 10))
df1 <- as.data.frame(cbind(x,y,z))
z <- factor(rep(c("Heads", "Tails"), 10))
x <- rnorm(20)
y <- rep("Char", 20)
z <- factor(rep(c("Heads", "Tails"), 10))
df1 <- as.data.frame(cbind(x,y,z))
df1$z <- as.factor(df1$z)
z <- rep(c("Heads", "Tails"), 10)
df1 <- as.data.frame(cbind(x,y,z))
df1$z <- as.factor(df1$z)
m1 <- as.matrix(df1)
mode(m1)
m2 <- matrix(c(1:25), nrow = 5)
upper.tri(m2)
m2[upper.tri(m2)]
m2
df[is.na(df)] <- 0
df1[is.na(df1)] <- 0
df1[5,5] <- 400
View(df1)
df2 <- as.data.frame(m2)
df2[5,5] <- 400
View(df2)
df2[5,5] <- NA
df1[is.na(df1)] <- 0
df2[is.na(df2)] <- 0
vec1 <- numeric(length = 100)
x <- 1:13
y <- seq(from = 4, to = 8, by = 0.5)
z <- rep(9:10,2)
xyz <- c(x,y,z)
x<-matrix(-4:5,nrow=2)
x
integrate(2*x + log(x), 1, 10)
f1 <- function(x){
2*x + log(x)
}
integrate(f1, 1, 10)
y
reticulate::repl_python()
5+6
reticulate::repl_python()
5+6
reticulate::repl_python()
5+6
quit
install.packages("IRkernel")
IRkernel::installspec()
reticulate::repl_python()
5+6
plot(cars)
install.packages(c("e1071", "forecast", "latex2exp", "maptools", "odbc", "pbkrtest", "RcppArmadillo", "RCurl", "renv", "RSQLite", "rvest", "sf", "units", "utf8", "xfun", "XML", "zoo"))
q()
install.packages("Metrics")
students <- c("Dimitar Genov",
"Valentin H. Petkov",
"Valentin P. Petkov",
"Rumen Boyadzhiev",
"Михаил Ангелов",
"Karolina Varbanova",
"Nicola Naydenov",
"Galya Ikonomova",
"Kiril Dimitrov")
log(2)
log(2)/0.5
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
5+6
demo()
demo("nlm")
log(2)/0.5
install.packages("learnr")
install.packages("echor")
install.packages(c("clipr", "colorspace", "glue", "jsonlite", "tidyselect", "tsDyn", "yaml"))
# Clear workspace
rm(list = ls())
# Clear plots
dev.off(dev.list()["RStudioGD"])
# Get location of current script
fileloc <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set working directory to script location
setwd(fileloc)
# Remove fileloc variable
rm(fileloc)
# Set locale to English
Sys.setlocale("LC_ALL","English")
x <- c(1,2,3,4,5,6,7,8,9)
x <- scan()
Age <- c(19,22,21,23,20)
Major <- c("Ec", "Ec", "BA", "BA", "Ec")
Degree <- c("BSc","MSc","BSc","MSc","BSc")
FName <- c("John","Mary","Maria","Juan","Jackie")
LName <- c("Hopkins","Jane","Curie","Carlos","Chan")
Students <- data.frame(FName,LName,Age,Major,Degree)
Students <- edit(Students)
Students <- fix(Students)
save(Students, file = "students.RData")
rm(Students)
load("students.RData")
FluTrends <- read.table("https://www.google.org/flutrends/about/data/flu/data.txt",
header = TRUE, skip = 11, sep=",", quote = "\"")
FluTrends$Date <- as.Date(FluTrends$Date)
# Employees data, NSI of Bulgaria
library(readxl)
employees_bg <- read_excel("Labour_2.1.1_EN.xls",
sheet = "2017NaceRev2 ",
skip = 4, na = "x")
colnames(employees_bg)[1] <- "Economic Activity"
class(employees_bg)
library(foreign)
spss_data <- read.spss("survey.sav", to.data.frame = T)
